[{"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\index.js":"1","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\App.js":"3","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorEdit.js":"4","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorAdd.js":"5","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorList.js":"6","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\utils\\utils.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":941,"mtime":1611796073724,"results":"11","hashOfConfig":"9"},{"size":1804,"mtime":1611796117388,"results":"12","hashOfConfig":"9"},{"size":1576,"mtime":1611794816275,"results":"13","hashOfConfig":"9"},{"size":1586,"mtime":1611862328347,"results":"14","hashOfConfig":"9"},{"size":689,"mtime":1611791669336,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cyu551",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\index.js",[],["34","35"],"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\App.js",[],"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorEdit.js",["36"],"import React, { useState, useEffect } from \"react\";\r\nimport { navigate, Link } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport { Button, InputGroup } from \"./utils/utils\";\r\n\r\nconst AuthorEdit = (props) => {\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [errs, setErrs] = useState({});\r\n  const { refresh, setRefresh }= props;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/authors/${props.id}`)\r\n      .then((res) => {\r\n        setAuthorName(res.data.authorName);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(`http://localhost:8000/api/authors/${props.id}`, {\r\n        authorName: authorName,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          setErrs(res.data.errors);\r\n        } else {\r\n          setRefresh(refresh + 1);\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Favorite Authors</h1>\r\n      <Link to=\"/\">Home</Link>\r\n      <p className=\"instruction\">Edit this Author</p>\r\n      <div className=\"addInput\">\r\n        <form onSubmit={submitForm}>\r\n          <div>\r\n            <InputGroup\r\n              label=\"Author's Name:\"\r\n              value={authorName}\r\n              type=\"text\"\r\n              handleChange={setAuthorName}\r\n              name=\"Author's Name\"\r\n            />\r\n            {errs.authorName ? (\r\n              <span style={{ color: \"red\" }}>{errs.authorName.message}</span>\r\n            ) : null}\r\n          </div>\r\n          <Button>\r\n            <Link to=\"/\">Cancel</Link>\r\n          </Button>\r\n          <Button>Submit</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorEdit;\r\n","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorAdd.js",["37"],"import React, { useState, useEffect } from \"react\";\r\nimport { navigate, Link } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport { Button, InputGroup } from \"../components/utils/utils\";\r\n\r\nconst AuthorAdd = (props) => {\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [errs, setErrs] = useState({})\r\n  const { refresh, setRefresh } = props;\r\n  \r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:8000/api/authors\", {\r\n        authorName: authorName,\r\n      })\r\n      .then((res) => {\r\n        if(res.data.errors) {\r\n          setErrs(res.data.errors);\r\n        } else {\r\n          setRefresh(refresh + 1)\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Favorite Authors</h1>\r\n      <Link to=\"/\">Home</Link>\r\n      <p className=\"instruction\">Add a new author:</p>\r\n      <div className=\"addInput\">\r\n        <form onSubmit={submitForm}>\r\n          <div>\r\n            <InputGroup\r\n              label=\"Author's Name:\"\r\n              value={authorName}\r\n              type=\"text\"\r\n              handleChange={setAuthorName}\r\n              name=\"Author's Name\"\r\n            />\r\n            {errs.authorName ? (\r\n              <span style={{ color: \"red\" }}>{errs.authorName.message}</span>\r\n            ) : null }\r\n          </div>\r\n          <Button>\r\n            <Link to=\"/\">Cancel</Link>\r\n          </Button>\r\n          <Button>Submit</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorAdd;\r\n","C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\AuthorList.js",["38","39","40"],"C:\\Users\\Mark Booth\\Documents\\CodingDojo\\MERN\\authors\\client\\src\\components\\utils\\utils.js",["41"],"import { navigate } from \"@reach/router\";\r\nimport React from \"react\";\r\nimport \"./utils.css\";\r\n\r\nconst InputGroup = (props) => {\r\n  const { label, value, type, handleChange, name } = props;\r\n\r\n  return (\r\n    <div className=\"InputGroup\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => handleChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Button = ({ children, className, ...props }) => {\r\n  return (\r\n    <button className={`Button ${className}`} {...props}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { InputGroup, Button };\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":18,"column":6,"nodeType":"48","endLine":18,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"55","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":18},{"ruleId":"50","severity":1,"message":"55","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [props.id]",{"range":"61","text":"62"},[574,576],"[props.id]"]